[
    {
        "ref": "https://g-mrz.github.io/blog/git-ssh/",
        "title": "Git Ssh",
        "section": "blog",
        "tags": ["工具"],
        "date" : "2021.10.17",
        "body": "生成ssh密钥 ssh-keygen -t ed25519 -C \u0026quot;your_email@example.com\u0026quot;\nssh-agent管理密钥 # 手动启动ssh-agent $ eval \u0026#34;$(ssh-agent -s)\u0026#34; \u0026gt; Agent pid 59566 # 将ssh私钥添加到ssh-agent $ ssh-add ~/.ssh/id_ed25519 将公钥存放至github\n"
    }
,
    {
        "ref": "https://g-mrz.github.io/blog/hugo/",
        "title": "Hugo",
        "section": "blog",
        "tags": ["工具"],
        "date" : "2021.10.17",
        "body": "命令 hugo new site [bolg name] # 生成博客 hugo new blog/xx.md # 生成文章 hugo server # 启动hugo hugo # 构建博客 "
    }
,
    {
        "ref": "https://g-mrz.github.io/blog/nvm/",
        "title": "Nvm",
        "section": "blog",
        "tags": ["工具"],
        "date" : "2021.08.15",
        "body": "常用命令 nvm install [version number] # 安装某版本node nvm uninstall [version number] # 卸载某版本node nvm ls # 列出已安装node nvm use [version number] # 切换版本 nvm ls-remote # (linux)查看远程服务器所以可用版本 nvm ls available # (windows)查看远程服务器所以可用版本 "
    }
,
    {
        "ref": "https://g-mrz.github.io/blog/ranger%E7%BB%88%E7%AB%AF%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%86%E5%99%A8/",
        "title": "Ranger终端文件管理器",
        "section": "blog",
        "tags": ["工具"],
        "date" : "2021.08.15",
        "body": "安装 1, git clone git@github.com:ranger/ranger.git(如克隆到~目录) 2, cd ranger 3, sudo make install 生成配置 ranger --copy-config=all # 生成默认配置文件于~/.config/ranger 常用命令 touch \u0026lt;文件名\u0026gt; #创建文件 mkdir \u0026lt;文件夹名称\u0026gt; #创建文件夹 "
    }
,
    {
        "ref": "https://g-mrz.github.io/blog/neovim/",
        "title": "Neovim",
        "section": "blog",
        "tags": ["工具"],
        "date" : "2021.08.08",
        "body": "安装 ### windows 下载[nvim-win64.zip](https://github.com/neovim/neovim/releases), 解压到本地目录（自己选), 在解压后文件中找到bin目录， 复制其绝对路径添加到Windows用户环境变量 ~/AppData/Local/nvim/init.vim \u0026lt;!--windows配置文件路径--\u0026gt; ### linux sudo apt install neovim ~.config/nvim/init.vim \u0026lt;!--配置文件路径--\u0026gt; vim-plug安装 sh -c \u0026#39;curl -fLo \u0026#34;${XDG_DATA_HOME:-$HOME/.local/share}\u0026#34;/nvim/site/autoload/plug.vim --create-dirs \\  https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim 命令 :terminal # neovim中打开终端 "
    }
,
    {
        "ref": "https://g-mrz.github.io/blog/vim/",
        "title": "Vim插件",
        "section": "blog",
        "tags": ["工具"],
        "date" : "2021.07.31",
        "body": "插件 1、vim-plug 插件管理器 [https://github.com/junegunn/vim-plug](https://github.com/junegunn/vim-plug) 2、coc-nvim 代码补全 [https://github.com/neoclide/coc.nvim](https://github.com/neoclide/coc.nvim) vim-plug linux安装方法 curl -fLo ~/.vim/autoload/plug.vim --create-dirs \\  https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim vim配置文件添加 call plug#begin(\u0026#39;~/.vim/plugged\u0026#39;) Plug \u0026#39;scrooloose/nerdtree\u0026#39;, { \u0026#39;on\u0026#39;: \u0026#39;NERDTreeToggle\u0026#39; } call plug#end() /* ~/.vim/plugged为插件安装目录 */ vim-plug常用命令 :PlugInstall \u0026#34; 安装插件:PlugClean \u0026#34; 移除不在列表中的插件:PlugUpdate \u0026#34; 更新插件:PlugUpgrade \u0026#34; 更新vim-plugcoc-vim安装 call plug#begin(\u0026#39;~/.vim/plugged\u0026#39;) *** Plug \u0026#39;neoclide/coc.nvim\u0026#39;, {\u0026#39;branch\u0026#39;: \u0026#39;release\u0026#39;}call plug#end()coc-nvim常用命令 :CocInstall [插件名称] \u0026#34; 安装插件:CocUninstall [插件名称] \u0026#34; 卸载插件:CocList extensions \u0026#34; 打开安装插件列表:CocConfig \u0026#34; 打开用户配置 :CocLocalConfig \u0026#34; 打开项目配置文件:checkhealth \u0026#34; 检查 NeoVim 状态:CocInfo \u0026#34; 查看 coc.nvim 服务相关信息:CocRestart \u0026#34; 重启 coc 服务"
    }
]
