[
    {
        "ref": "https://g-mrz.github.io/blog/wsl%E5%AE%89%E8%A3%85%E5%9B%BE%E5%BD%A2%E7%95%8C%E9%9D%A2/",
        "title": "Wsl安装图形界面",
        "section": "blog",
        "tags": ["wsl"],
        "date" : "2021.10.24",
        "body": "1,安装xorg sudo apt install xorg. xorg是xfce桌面环境基础依赖\n2,安装xfce4 sudo apt install xfce4\n3,安装xrdp sudo apt install xrdp\n配置xrdp端口、向xsession写入xfce4-session sudo sed -i 's/port=3389/port=3390/g' /etc/xrdp/xrdp.ini\rsudo echo xfce4-session \u0026gt;~/.xsession\rwindows中启动远程桌面连接xrdp服务器打开linux桌面环境\n配置中文包 sudo apt install language-pack-zh-hans language-pack-zh-hans-base\r#打开/etc/defalut/locale添加\rLANG=zh_CNUTF-8\rLANGUAGE=\u0026quot;zh_CN:zh\u0026quot;\rxrdp命令 sudo service xrdp restart 重启\nsudo service xrdp start 启动\n"
    }
,
    {
        "ref": "https://g-mrz.github.io/blog/git-ssh/",
        "title": "Git Ssh",
        "section": "blog",
        "tags": ["git","ssh"],
        "date" : "2021.10.17",
        "body": "git 使用ssh密钥 生成ssh密钥 ssh-keygen -t ed25519 -C \u0026quot;your_email@example.com\u0026quot;\nssh-agent管理密钥 # 手动启动ssh-agent\r$ eval \u0026quot;$(ssh-agent -s)\u0026quot;\r\u0026gt; Agent pid 59566\r# 将ssh私钥添加到ssh-agent\r$ ssh-add ~/.ssh/id_ed25519\r将公钥存放至github\n"
    }
,
    {
        "ref": "https://g-mrz.github.io/blog/hugo/",
        "title": "Hugo",
        "section": "blog",
        "tags": ["linux","hugo"],
        "date" : "2021.10.17",
        "body": "ubuntu hugo安装 https://github.com/gohugoio/hugo/releases下载hugo*.dep安装包\n在安装包存放目录使用sudo dpkg -i hugo*.dep进行安装\n命令 hugo new site [bolg name] 生成博客\nhugo new blog/xx.md 生成文章\nhugo server 启动hugo\nhugo 构建博客\n"
    }
,
    {
        "ref": "https://g-mrz.github.io/blog/nvm/",
        "title": "Nvm",
        "section": "blog",
        "tags": ["nvm"],
        "date" : "2021.08.15",
        "body": "常用命令 nvm install [version number] 安装某版本node\nnvm uninstall [version number] 卸载某版本node\nnvm ls 列出已安装node\nnvm use [version number] 切换版本\nnvm ls-remote (linux)查看远程服务器所以可用版本 nvm ls available (windows)查看远程服务器所以可用版本\n"
    }
,
    {
        "ref": "https://g-mrz.github.io/blog/ubuntu/",
        "title": "Linux",
        "section": "blog",
        "tags": ["linux","ubuntu"],
        "date" : "2021.08.15",
        "body": "命令 sudo apt install [name] 安装应用\nsudo apt remove [name] 卸载应用\nsudo apt-get update 更新访问源列表\nsudo apt-get upgrade 更新已安装软件\nsudo update-alternatives --config editor 配置默认文本编辑器\n"
    }
,
    {
        "ref": "https://g-mrz.github.io/blog/ranger%E7%BB%88%E7%AB%AF%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%86%E5%99%A8/",
        "title": "Ranger终端文件管理器",
        "section": "blog",
        "tags": ["linux","ubuntu"],
        "date" : "2021.08.15",
        "body": "安装 1) git clone git@github.com:ranger/ranger.git(如克隆到~目录)\r2) cd ranger\r3）sudo make install\r配置 执行ranger --copy-config=all 生成默认配置文件于~/.config/ranger\n命令 "
    }
,
    {
        "ref": "https://g-mrz.github.io/blog/neovim/",
        "title": "Neovim",
        "section": "blog",
        "tags": ["vim/neovim"],
        "date" : "2021.08.08",
        "body": "安装 windows 下载nvim-win64.zip, 解压到本地目录（自己选), 在解压后文件中找到bin目录， 复制其绝对路径添加到Windows用户环境变量\nwindows配置文件路径~/AppData/Local/nvim/init.vim\nlinux sudo apt install neovim\n配置文件路径~.confignvim/init.vim\nvim-plug安装 https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim 命令 :terminalneovim中打开终端\n"
    }
,
    {
        "ref": "https://g-mrz.github.io/blog/vim/",
        "title": "Vim插件",
        "section": "blog",
        "tags": ["vim"],
        "date" : "2021.07.31",
        "body": "插件 1、vim-plug 插件管理器 https://github.com/junegunn/vim-plug\n2、coc-nvim 代码补全 https://github.com/neoclide/coc.nvim\nvim-plug windows安装方法 linux安装方法 curl -fLo ~/.vim/autoload/plug.vim --create-dirs \\\rhttps://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim\rvim配置文件添加 call plug#begin('~/.vim/plugged')\rPlug 'scrooloose/nerdtree', { 'on': 'NERDTreeToggle' }\rcall plug#end()\r/*\r~/.vim/plugged为插件安装目录 */\rvim-plug常用命令 :PlugInstall安装插件 :PlugClean移除不在列表中的插件\n:PlugUpdate更新插件\n:PlugUpgrade更新vim-plug\n\u0026quot; NERD tree 插件会在首次使用 NERDTreeToggle 命令时进行加载\nPlug \u0026lsquo;scrooloose/nerdtree\u0026rsquo;, { \u0026lsquo;on\u0026rsquo;: \u0026lsquo;NERDTreeToggle\u0026rsquo; }\n\u0026quot; 多个命令\nPlug \u0026lsquo;junegunn/vim-github-dashboard\u0026rsquo;, { \u0026lsquo;on\u0026rsquo;: [\u0026lsquo;GHDashboard\u0026rsquo;, \u0026lsquo;GHActivity\u0026rsquo;] }\n\u0026quot; 当文件类型为 clojure 时，加载插件\nPlug \u0026lsquo;tpope/vim-fireplace\u0026rsquo;, { \u0026lsquo;for\u0026rsquo;: \u0026lsquo;clojure\u0026rsquo; }\n\u0026quot; 多种文件类型\nPlug \u0026lsquo;kovisoft/paredit\u0026rsquo;, { \u0026lsquo;for\u0026rsquo;: [\u0026lsquo;clojure\u0026rsquo;, \u0026lsquo;scheme\u0026rsquo;] }\n\u0026quot; 当首次执行 Vader 命令，且文件类型为 vader 时，加载插件\nPlug \u0026lsquo;junegunn/vader.vim\u0026rsquo;, { \u0026lsquo;on\u0026rsquo;: \u0026lsquo;Vader\u0026rsquo;, \u0026lsquo;for\u0026rsquo;: \u0026lsquo;vader\u0026rsquo; }\n\u0026quot; 插件按需加载后执行特定代码\nPlug \u0026lsquo;junegunn/goyo.vim\u0026rsquo;, { \u0026lsquo;for\u0026rsquo;: \u0026lsquo;markdown\u0026rsquo; }\ncoc-nvim 安装 call plug#begin('~/.vim/plugged')\r***\rPlug 'neoclide/coc.nvim', {'branch': 'release'}\rcall plug#end()\rcoc-nvim常用命令 :CocInstall [插件名称]安装插件\n:CocUninstall [插件名称]卸载插件\n:CocList extensions打开安装插件列表\n:CocConfig打开用户配置 coc-settings.json\n:CocLocalConfig打开项目配置文件\n:checkhealth检查 NeoVim 状态\n:CocInfo查看 coc.nvim 服务相关信息\n:CocRestart重启 coc 服务\n"
    }
]
